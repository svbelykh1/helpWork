













































































- Каталоги
-- hier - Корневой unix
-- etc  - Конфиги
-- bin  - Пользовательские программы 
-- sbin,libexec  - Административные, системные сервисы
-- etc/rc.d etc/init.d - скрипты
-- share - иконки обои шрифты документация
-- src  - исходные тесты
-- usr/bin usr/sbin -- программы которые пользовательские 
-- /home - домашний каталог
-- /var  от слова variable (логи библиотека) - изменяющиеся данные


-Команды
-- cp -v - ключ -v от слова verbose - по подробней
-- df - diskFull  - показываает свободное место на диске
-- du - diskUsage - просмотр содержимого  
-- file/  - выведет тип файла
-- find /usr/share -name index.html - ищет файл index.html в каталоге 


- Чтение содержимого файла 
-- cat - открывает файл на чтение и выводит его на экран
-- more - для просмотра больших файлов(древняя) - выходит после пролистывание файла до конца 
-- less - усовершенствованная версия команды more понимает клавиши PageUp PageDown в отличие от more 
-- tail -n 5 - выводит хвосьт файла
-- head - выводит голову файла


- Редакторы
--nano - левый ALT+левый SHIFT+3 - появляется нумерация строк
ctl+O - сохранить
ctl+K - удалить ненужные строки 
	

- Фильтр
--grep svbelykh /etc/passwd - что(svbelykh) где искать(/etc/passwd)

-- grep -v '^#' /путь до файла - (регуляhка '^#' скажет грепу... покажи строки которые начинаются с #,а ключ -v скажет покажи строки которые НЕ начинаются с #)
-- '^#\|^$' -- Строки которые начинаюися с # либо строки которые начинаются и тут же заканыиваются.. т.е пустые
-- итог выведи строки которые не пустые и не начинаются с # -- grep -v '^#\|^$' /путь до файла

- Процессы
-- Много дядя рассказывал про shell bash и процессы в них ... но нихера не понятно было его объяснение 
-- Что удалось понять - это каждый процесс в линукс работает как минимум с двумя файлами к примеру оболочка bash раблтает с двумя файлами, это клавиатура он называл это файл номер 0
-- и экран файл номер 1 
--файл номер 0 - это stdin
--файл номер 1 - это  stdout ..Типа bash оболочка shell запирает символы с клавы и отдает на экран 
--ls -l /bin > ls.txt - перенаправит результат работы ls -l каталога /bin в файл ls.txt
--Есть еще один - это файл номер 2... эьто куда перенаправляются ошибки 
--Итог: 
--Команда просмотра места du -h  каталога /var выводит на экран .. по мимо результата  еще и ошибки связанные с правами .. дак вот нужно запомнить одну хуйню
-- команда вида ... du -h -s /var 1> du.txt 2>du_err.txt - просмотрит сколько места занято в каталоги /var и 
-- 1) результат(файла 1) который без ошибок и ворнингов перенапавит в файл du.txt
-- 2) результат(файла 2) с ошибками запишет в файл du_err.txt 
-- 3) Если мы не хотим ошибки никуда записывать то можно сказать 2>/dev/null - вот откуда этот ебаное понятие dev null 
